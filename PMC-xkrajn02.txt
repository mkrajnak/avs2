Architektury Výpočetních Systémů (AVS 2019)
Projekt č. 2 (PMC)
Login: xkrajn02

Úloha 1: Paralelizace původního řešení
===============================================================================

1) Kterou ze smyček (viz zadání) je vhodnější paralelizovat a co způsobuje 
   neefektivitu paralelizaci té druhé?
    Testovaci subor:        bun_zipper_res3.pts
    Referencne riesenie:    Elapsed Time:        10425 ms

    a) paralelizacia smycky v metode marchCubes
        #pragma omp parallel for default(none) shared(totalCubesCount, field) reduction(+:totalTriangles)
        Elapsed Time:        762 ms
    
    b) paralelizacia smycky marchCubes + vektorizacia v metode evaluateFieldAt
        #pragma omp simd reduction (min:value)
        Elapsed Time:        318 ms

    c) paralelizacia smycky v metode evaluateFieldAt
        #pragma omp parallel for reduction(min:value)
        Elapsed Time:        14392 ms

    Vyhodnejsie je paralelizacia smycky v metode marchCubes + vektorizacia  
    v metore evaluateFieldAt (varianta b).
    Neefektivitu druhej varianty sposobuje vypocet minima.


2) Jaké plánování (rozdělení práce mezi vlákna) jste zvolili a proč?
    dynamic, 16
   Jaký vliv má velikost "chunk" při dynamickém plánování (8, 16, 32, 64)?

3) Jakým způsobem zajišťujete ukládání trojúhelníků z několika vláken současně?
    #pragma omp critical (c1)

Úloha 2: Paralelní průchod stromem
===============================================================================

1) Stručně popište použití OpenMP tasků ve vašem řešení.

2) Jakým způsobem jste realizovali sesbírání celkového počtu trojúhelníků?

3) Jaký vliv má na vaše řešení tzv. "cut-off"? Je vhodné vytvářet nový 
   task pro každou krychli na nejnižší úrovni?

4) Jakým způsobem zajišťujete ukládání trojúhelníků z několika vláken současně?

Úloha 2: Grafy škálování obou řešení
===============================================================================

1) Stručně zhodnoťte efektivitu vytvořených řešení (na základě grafů škálování).

2) V jakém případě (v závislosti na počtu bodů ve vstupním souboru a velikosti 
   mřížky) bude vaše řešení 1. úlohy neefektivní? (pokud takový případ existuje)

3) Je (nebo není) stromový algoritmus efektivnější z pohledu slabého škálování 
   vzhledem ke vstupu?
